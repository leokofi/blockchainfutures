'use strict';

var utils = require('../../utils');
var bs58 = require('bs58');
var bl = require('bl');
var fs = require('fs');
var Block = require('ipfs-block');
var debug = require('debug');
var log = debug('cli:block');
log.error = debug('cli:block:error');

function addBlock(buf) {
  utils.getIPFS(function (err, ipfs) {
    if (err) {
      throw err;
    }

    var block = new Block(buf);

    ipfs.block.put(block, function (err, block) {
      if (err) {
        throw err;
      }

      console.log(bs58.encode(block.key).toString());
    });
  });
}

module.exports = {
  command: 'put [data]',

  describe: 'Stores input as an IPFS block',

  builder: {},

  handler: function handler(argv) {
    if (argv.data) {
      return addBlock(fs.readFileSync(argv.data));
    }

    process.stdin.pipe(bl(function (err, input) {
      if (err) {
        throw err;
      }

      addBlock(input);
    }));
  }
};