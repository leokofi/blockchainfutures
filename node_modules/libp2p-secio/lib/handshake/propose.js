'use strict';

var debug = require('debug');

var support = require('../support');
var crypto = require('./crypto');

var log = debug('libp2p:secio');
log.error = debug('libp2p:secio:error');

// step 1. Propose
// -- propose cipher suite + send pubkeys + nonce
module.exports = function propose(state, cb) {
  log('1. propose - start');

  log('1. propose - writing proposal');
  support.write(state, crypto.createProposal(state));
  support.read(state.shake, function (err, msg) {
    if (err) {
      return cb(err);
    }

    log('1. propose - reading proposal', msg);

    try {
      crypto.identify(state, msg);
      crypto.selectProtocols(state);
    } catch (err) {
      return cb(err);
    }

    log('1. propose - finish');

    cb();
  });
};