{
  "_args": [
    [
      {
        "raw": "uport-registry@git://github.com/subramanianv/uport-registry.git#hack",
        "scope": null,
        "escapedName": "uport-registry",
        "name": "uport-registry",
        "rawSpec": "git://github.com/subramanianv/uport-registry.git#hack",
        "spec": "git://github.com/subramanianv/uport-registry.git#hack",
        "type": "hosted",
        "hosted": {
          "type": "github",
          "ssh": "git@github.com:subramanianv/uport-registry.git#hack",
          "sshUrl": "git+ssh://git@github.com/subramanianv/uport-registry.git#hack",
          "httpsUrl": "git+https://github.com/subramanianv/uport-registry.git#hack",
          "gitUrl": "git://github.com/subramanianv/uport-registry.git#hack",
          "shortcut": "github:subramanianv/uport-registry#hack",
          "directUrl": "https://raw.githubusercontent.com/subramanianv/uport-registry/hack/package.json"
        }
      },
      "/Users/Subbu/Desktop/blockchainfutures/node_modules/uport-persona"
    ]
  ],
  "_from": "git://github.com/subramanianv/uport-registry.git#hack",
  "_id": "uport-registry@1.2.5",
  "_inCache": true,
  "_location": "/uport-registry",
  "_phantomChildren": {
    "babel-runtime": "6.18.0",
    "brfs": "1.4.3",
    "bs58": "3.0.0",
    "ip": "1.1.4",
    "lodash.filter": "4.6.0",
    "lodash.map": "4.6.0",
    "merge-stream": "1.0.1",
    "multipart-stream": "2.0.1",
    "vinyl": "0.5.3",
    "vinyl-fs-browser": "0.1.0",
    "vinyl-multipart-stream": "1.2.6",
    "xtend": "4.0.1"
  },
  "_requested": {
    "raw": "uport-registry@git://github.com/subramanianv/uport-registry.git#hack",
    "scope": null,
    "escapedName": "uport-registry",
    "name": "uport-registry",
    "rawSpec": "git://github.com/subramanianv/uport-registry.git#hack",
    "spec": "git://github.com/subramanianv/uport-registry.git#hack",
    "type": "hosted",
    "hosted": {
      "type": "github",
      "ssh": "git@github.com:subramanianv/uport-registry.git#hack",
      "sshUrl": "git+ssh://git@github.com/subramanianv/uport-registry.git#hack",
      "httpsUrl": "git+https://github.com/subramanianv/uport-registry.git#hack",
      "gitUrl": "git://github.com/subramanianv/uport-registry.git#hack",
      "shortcut": "github:subramanianv/uport-registry#hack",
      "directUrl": "https://raw.githubusercontent.com/subramanianv/uport-registry/hack/package.json"
    }
  },
  "_requiredBy": [
    "/uport-persona"
  ],
  "_resolved": "git://github.com/subramanianv/uport-registry.git#879ab6c0274ea8778dbbd85a637fcfba8796ef5a",
  "_shasum": "3a50b8b9e00630e799f2885e96974aca233fd061",
  "_shrinkwrap": null,
  "_spec": "uport-registry@git://github.com/subramanianv/uport-registry.git#hack",
  "_where": "/Users/Subbu/Desktop/blockchainfutures/node_modules/uport-persona",
  "author": {
    "name": "ConsenSys"
  },
  "authors": [
    "Christian Lundkvist"
  ],
  "browser": {
    "ipfs-js": "browser-ipfs",
    "ipfs-api": false
  },
  "bugs": {
    "url": "https://github.com/ConsenSys/uport-registry/issues"
  },
  "dependencies": {
    "bluebird": "*",
    "browser-ipfs": "0.0.5",
    "bs58": "^3.0.0",
    "ipfs-api": "2.3.2",
    "ipfs-js": "0.0.11",
    "web3": "*"
  },
  "description": "uPort Registry contracts and JS middleware",
  "devDependencies": {
    "chai": "*",
    "ethereumjs-testrpc": "^3.0.0",
    "ipfsd-ctl": "^0.14.0",
    "mocha": "^2.4.5",
    "truffle": "^2.0.8"
  },
  "gitHead": "879ab6c0274ea8778dbbd85a637fcfba8796ef5a",
  "homepage": "https://github.com/ConsenSys/uport-registry",
  "keywords": [
    "uPort"
  ],
  "license": "Apache-2",
  "main": "lib/uportregistry.js",
  "name": "uport-registry",
  "optionalDependencies": {},
  "readme": "# uPort Registry\n\n## Deployed Contracts\n\nThe registry has been deployed at the following locations:\n\n- ConsenSys Testnet: `0xa9be82e93628abaac5ab557a9b3b02f711c0151c`\n- Mainnet: `0x022f41a91cb30d6a20ffcfde3f84be6c1fa70d60`\n\n## About\n\nThe uPort registry library lets you set the attributes of a uPort identity. The attributes needs to be in a JSON format. Right now we are focusing on\n\n* Full Name\n* Profile Picture\n\nbut we intend to support the full [Schema.org Person schema](http://schema.org/Person). The Full Name and Profile Picture is stored in IPFS as a JSON structure that corresponds to the schema.org schema:\n\n```\n{\n   \"@context\": \"http://schema.org/\",\n   \"@type\": \"Person\",\n   \"name\": \"Christian Lundkvist\",\n   \"image\": [{\"@type\": \"ImageObject\",\n             \"name\": \"avatar\",\n             \"contentUrl\" : \"/ipfs/QmUSBKeGYPmeHmLDAEHknAm5mFEvPhy2ekJc6sJwtrQ6nk\"}]\n}\n```\n\nand an IPFS hash of this structure is stored in the contract as a `bytes` structure.\n\n## uPort Registry Library\n\nThe uPort Registry Library allows you to set attributes of and/or view attributes of uPort identities in your Dapp. You need to set a web3 provider using `uPortRegistry.setWeb3Provider` in order to access the Ethereum contracts, and you need to set an Ipfs provider using `uPortRegistry.setIpfsProvider` to access data stored in IPFS.\n\n### Running tests\n\nRemember to have a local IPFS node and Ethereum node running.\n\n```\nnpm run test\n```\n\n### Usage\n\nTo use the library, first include it in your project:\n\n**Node** \n\n\n```javascript\nvar uportRegistry = require(\"uport-registry\");\n```\n\nThen, setup your `uportRegistry` object using the code\nbelow. IMPORTANT: if you are using this module for the browser, you\nshould configure you `uportRegistry` object differently (see code\nbelow for Browser).\n\n```javascript\nvar ipfsApi = require('ipfs-api');\nvar web3    = require('web3');\n\nuportRegistry.setIpfsProvider(ipfsApi(<hostname>, <port>));\nuportRegistry.setWeb3Provider(new web3.providers.HttpProvider('http://localhost:8545'));\n```\n\n**Browser**\n\n```html\n<!-- uportRegistry library. -->\n<script type=\"text/javascript\" src=\"./dist/uportregistry.js\"></script>\n```\n\nConfigure your uportRegistry object using the code below. IMPORTANT:\nThis code is only valid if you will use it on Browsers (see above).\n\n```javascript\nuportRegistry.setIpfsProvider({host: <hostname>, port: <port>});\nuportRegistry.setWeb3Provider(new web3.providers.HttpProvider('http://localhost:8545'));\n```\n\n### Setting uportRegistry Attributes\n\n```javascript\n\nvar registryAddress = '0xbf014c4d7697cd83c9451a93648773cf510dc766'\nvar attributes =\n{\n   \"@context\": \"http://schema.org\",\n   \"@type\": \"Person\",\n   \"name\": \"Christian Lundkvist\",\n   \"image\": [{\"@type\": \"ImageObject\",\n             \"name\": \"avatar\",\n             \"contentUrl\" : \"/ipfs/QmUSBKeGYPmeHmLDAEHknAm5mFEvPhy2ekJc6sJwtrQ6nk\"}]\n}\n\nuPortRegistry.setAttributes(registryAddress,\n                            attributes,\n                            {from: myAddr}\n                            ).then(function ()\n                            {console.log('Attributes set.')})\n```\n\n### Getting attributes\n\nIf you have an address of the current uPort identity, you can get their associated attributes using the command `uPortRegistry.getAttributes()`. This command looks up the attributes and returns a JSON structure.\n\n```javascript\nvar registryAddress = '0xbf014c4d7697cd83c9451a93648773cf510dc766'\nvar uportId = '0xdb24b49d8f7e47d30498ee2a846375c3ba771d3e'\n\nuPortRegistry.getAttributes(registryAddress,\n                            uportId\n                            ).then(function (attributes)\n                            {console.log(attributes)})\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/ConsenSys/uport-registry.git"
  },
  "scripts": {
    "build": "browserify lib/uportregistry.js --s uportRegistry --o dist/uportregistry.js",
    "build-contract": "./node_modules/truffle/cli.js build",
    "test": "./node_modules/mocha/bin/mocha --reporter spec test/*.js"
  },
  "version": "1.2.5"
}
