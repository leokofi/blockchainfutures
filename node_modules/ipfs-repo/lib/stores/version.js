'use strict';

var pull = require('pull-stream');
var series = require('run-series');
var toBuffer = require('safe-buffer').Buffer.from;

exports = module.exports;

exports.setUp = function (basePath, BlobStore, locks) {
  var store = new BlobStore(basePath);
  var versionFile = 'version';

  return {
    exists: function exists(callback) {
      store.exists(versionFile, callback);
    },
    get: function get(callback) {
      pull(store.read(versionFile), pull.collect(function (err, values) {
        if (err) {
          return callback(err);
        }

        var version = Buffer.concat(values).toString('utf8');
        callback(null, version);
      }));
    },
    set: function set(value, callback) {
      series([function (cb) {
        return locks.lock(cb);
      }, function (cb) {
        var values = [Buffer.isBuffer(value) ? value : toBuffer(value)];
        pull(pull.values(values), store.write(versionFile, cb));
      }], function (err) {
        locks.unlock(function (err2) {
          callback(err || err2);
        });
      });
    }
  };
};