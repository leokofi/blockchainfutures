'use strict';

var pull = require('pull-stream');
var series = require('run-series');

exports = module.exports;

exports.setUp = function (basePath, BlobStore, locks) {
  var store = new BlobStore(basePath);
  var configFile = 'config';

  return {
    get: function get(callback) {
      pull(store.read(configFile), pull.collect(function (err, values) {
        if (err) {
          return callback(err);
        }

        var config = Buffer.concat(values);
        var result = void 0;
        try {
          result = JSON.parse(config.toString());
        } catch (err) {
          return callback(err);
        }

        callback(null, result);
      }));
    },
    set: function set(config, callback) {
      series([function (cb) {
        return locks.lock(cb);
      }, function (cb) {
        pull(pull.values([new Buffer(JSON.stringify(config, null, 2))]), store.write(configFile, cb));
      }], function (err) {
        locks.unlock(function (err2) {
          callback(err || err2);
        });
      });
    }
  };
};