'use strict';

var pull = require('pull-stream');
var series = require('run-series');

exports = module.exports;

exports.setUp = function (basePath, BlobStore) {
  var store = new BlobStore(basePath);
  var lockFile = 'repo.lock';

  return {
    lock: function lock(callback) {
      function createLock() {
        pull(pull.values([new Buffer('LOCK')]), store.write(lockFile, callback));
      }

      function doesExist(err, exists) {
        if (err) return callback(err);

        if (exists) {
          // default 100ms
          setTimeout(function () {
            store.exists(lockFile, doesExist);
          }, 100);
          return;
        }

        createLock();
      }

      store.exists(lockFile, doesExist);
    },
    unlock: function unlock(callback) {
      series([function (cb) {
        return store.remove(lockFile, cb);
      }, function (cb) {
        return store.exists(lockFile, function (err, exists) {
          if (err) return cb(err);

          if (exists) {
            return cb(new Error('failed to remove lock'));
          }

          cb();
        });
      }], callback);
    }
  };
};